/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package gui;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import java.awt.BorderLayout;
import java.awt.Toolkit;
import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Box;
import javax.swing.JFileChooser;
import roboscope.Util;

/**
 *
 * @author U1
 */
public class MainFrame extends javax.swing.JFrame
{
    public static MainFrame mf;
    private static Webcam webcam;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        
        initComponents();      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelInferior = new javax.swing.JPanel();
        statusbar = new javax.swing.JTextField();
        panelSuperior = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtAltitude = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtAzimuth = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        panelCentral = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RobotScope");
        setMinimumSize(new java.awt.Dimension(600, 400));

        panelInferior.setLayout(new java.awt.BorderLayout());

        statusbar.setEditable(false);
        statusbar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        statusbar.setText("Connected to telescope | Searching for camera...");
        panelInferior.add(statusbar, java.awt.BorderLayout.CENTER);

        getContentPane().add(panelInferior, java.awt.BorderLayout.PAGE_END);

        panelSuperior.setLayout(new java.awt.GridLayout(1, 0));

        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        jButton1.setText("Begin to watch");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton1);

        jButton2.setText("Stop watching");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton2);

        panelSuperior.add(jPanel6);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Altitude: ");
        jPanel3.add(jLabel1, java.awt.BorderLayout.LINE_START);

        jtAltitude.setText("0.0");
        jPanel3.add(jtAltitude, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Azmiuth:");
        jPanel2.add(jLabel2, java.awt.BorderLayout.LINE_START);

        jtAzimuth.setText("0.0");
        jPanel2.add(jtAzimuth, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jPanel1.add(jPanel5);

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jButton3.setText("Move");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton3);

        jPanel1.add(jPanel4);

        panelSuperior.add(jPanel1);

        getContentPane().add(panelSuperior, java.awt.BorderLayout.PAGE_START);

        panelCentral.setLayout(new java.awt.BorderLayout());
        getContentPane().add(panelCentral, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Watch");

        jMenuItem2.setText("Begin to watch");
        jMenu1.add(jMenuItem2);

        jMenuItem10.setText("Stop watching");
        jMenu1.add(jMenuItem10);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Camera");

        jMenuItem5.setText("Save image...");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Settings");

        jMenuItem9.setText("Location");
        jMenu2.add(jMenuItem9);
        jMenu2.add(jSeparator2);

        jMenuItem1.setText("Camera");
        jMenu2.add(jMenuItem1);

        jMenuItem8.setText("Arduino");
        jMenu2.add(jMenuItem8);

        jMenuBar1.add(jMenu2);

        jMenuHelp.setText("Help");

        jMenuItem4.setText("Help online");
        jMenuHelp.add(jMenuItem4);
        jMenuHelp.add(jSeparator1);

        jMenuItem3.setText("About...");
        jMenuHelp.add(jMenuItem3);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        beginToWatch();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        double az = Util.strToDouble(mf.jtAzimuth.getText());
        double al = Util.strToDouble(mf.jtAltitude.getText());
        moveTelescope(az, al);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        webcam.close();
        mf.panelCentral.removeAll();
        mf.panelCentral.add(new ImageBackground("/gui/img0.png"), BorderLayout.CENTER);
        mf.panelCentral.updateUI();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try {
            saveImage();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                mf = new MainFrame();
                
                Dimension p = Toolkit.getDefaultToolkit().getScreenSize();
                int w = (int) (0.5* (double) p.width);
                int h = (int) (0.6* (double) p.height);
                int x = p.width/2-w/2;
                int y = p.height/2-h/2;
                
                mf.setBounds(x, y, w, h);
                mf.setSize(300, 400);
                mf.setVisible(true);
            
                mf.panelCentral.add(new ImageBackground("/gui/img0.png"),
                        BorderLayout.CENTER);
               
                mf.jMenuBar1.add(Box.createHorizontalGlue());
                mf.jMenuBar1.add(mf.jMenuHelp);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextField jtAltitude;
    private javax.swing.JTextField jtAzimuth;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JPanel panelInferior;
    private javax.swing.JPanel panelSuperior;
    private javax.swing.JTextField statusbar;
    // End of variables declaration//GEN-END:variables

    private void beginToWatch()
    {
        webcam = Webcam.getDefault();
        //webcam.setViewSize(new Dimension(640,480));
        WebcamPanel panel = new WebcamPanel(webcam);
        panel.setFillArea(rootPaneCheckingEnabled);
        mf.panelCentral.removeAll();
        mf.panelCentral.add(panel, BorderLayout.CENTER);
        mf.panelCentral.updateUI();
    }

    private void moveTelescope(double az, double al)
    {
        System.out.println("** Az: "+az+" ; Al: "+al);
    }

    private void saveImage() throws IOException
    {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        int result = chooser.showSaveDialog(null);
        Integer i = new Integer(JFileChooser.APPROVE_OPTION);
        if (i != null)
        {
            File archivo = chooser.getSelectedFile();
            String imagen = archivo.getAbsolutePath();
            
            if (imagen.lastIndexOf(".") > 0){
                imagen = imagen.substring(0,imagen.lastIndexOf("."));
            }
            imagen = imagen + ".PNG";
            
            File imagenArch = new File(imagen);
            String formato = "PNG";
            try
            {
                BufferedImage image = webcam.getImage();
                ImageIO.write(image, formato, imagenArch);
            }catch (IOException ioe){
                System.out.println("Error al guardar la imagen");}
        }
        
        
    }
}
